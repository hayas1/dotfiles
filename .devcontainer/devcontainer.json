/// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
/// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/debian
{
  "name": "Debian",
  "postCreateCommand": "./.devcontainer/import/entry.sh",
  "build": {
    "dockerfile": "./Dockerfile",
    "context": "..",
    "args": {
      "WORK_SPACE": "${containerWorkspaceFolder}"
      // "http_proxy": "${localEnv:http_proxy}",
      // "HTTP_PROXY": "${localEnv:HTTP_PROXY}",
      // "https_proxy": "${localEnv:https_proxy}",
      // "HTTPS_PROXY": "${localEnv:HTTPS_PROXY}",
      // "no_PROXY": "${localEnv:no_proxy}",
      // "NO_PROXY": "${localEnv:NO_PROXY}"
    }
  },
  /// Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  "extensions": [
    "eamodio.gitlens",
    // "mhutchie.git-graph", /// in open source project, gitlens has same feature
    "streetsidesoftware.code-spell-checker",
    "shardulm94.trailing-spaces",
    "Gruntfuggly.todo-tree",
    "christian-kohler.path-intellisense",
    "mads-hartmann.bash-ide-vscode",
    "timonwong.shellcheck",
    "foxundermoon.shell-format",
    "yzhang.markdown-all-in-one",
    "rangav.vscode-thunder-client",
    "ms-azuretools.vscode-docker", // installed by docker-from-docker features
    "ms-kubernetes-tools.vscode-kubernetes-tools", // installed by kubectl-helm-minikube features
    "ms-python.python", // installed by python features
    "dbaeumer.vscode-eslint", // installed by node features
    "esbenp.prettier-vscode", // install for node
    "golang.Go", // installed by go features
    "vadimcn.vscode-lldb", // installed by rust features
    "rust-lang.rust-analyzer" // installed by rust features
    // "googlecloudtools.cloudcode", /// this extension will cause 100% cup/memory/storage
  ],
  "settings": {
    "editor.formatOnSave": true,
    "terminal.integrated.defaultProfile.linux": "zsh",
    "trailing-spaces.trimOnSave": true
  },
  "containerEnv": {
    "USE_NERDFONT": "nerdfont-complete", // cannot use nerdfont, comment out this line
    "CLOUDSDK_CONFIG": "/home/vscode/.gcloud-config/"
  },
  /// devcontainer-ci cannot ignore mounts yet https://github.com/devcontainers/ci/issues/166
  "mounts": [
    /// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    /// but it seems that docker-from-docker can be used if comment out this...?
    // "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    /// tool settings from host machine
    // "source=${localEnv:HOME}/.ssh/,target=/home/vscode/.ssh/,type=bind,consistency=cached",
    // "source=${localEnv:HOME}/.config/git/,target=/home/vscode/.git-config/,type=bind,consistency=cached",
    // "source=${localEnv:HOME}/.aws/,target=/home/vscode/.aws/,type=bind,consistency=cached",
    // "source=${localEnv:HOME}/.config/gcloud/,target=/home/vscode/.gcloud-config/,type=bind,consistency=cached",
    // "source=${localEnv:HOME}/.kube/,target=/home/vscode/.kube/,type=bind,consistency=cached",
    // "source=${localEnv:HOME}/.helm/,target=/home/vscode/.helm/,type=bind,consistency=cached"
  ],
  /// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  /// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
  /// available features list https://github.com/devcontainers/features/tree/main/src,
  /// but features is yet preview
  "features": {
    // "ghcr.io/devcontainers/features/python:1": {
    // 	"version": "latest"
    // },
    // // "ghcr.io/devcontainers/features/rust:1": {
    // // 	"version": "latest"
    // // },
    // // "ghcr.io/devcontainers/features/go:1": {
    // // 	"version": "latest"
    // // },
    // // "ghcr.io/devcontainers/features/node:1": {
    // // 	"version": "latest"
    // // },
    // // "ghcr.io/devcontainers/features/java:1": {
    // //     "version": "latest"
    // // },
    // // "ghcr.io/devcontainers/features/terraform:1": {
    // // 	"version": "latest"
    // // },
    // "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
    // 	"version": "latest"
    // },
    // "ghcr.io/devcontainers/features/docker-from-docker:1": {
    // 	"version": "latest"
    // },
    // // "ghcr.io/devcontainers/features/aws-cli:1": {
    // //     "version": "latest"
    // // },
    // // "ghcr.io/devcontainers/features/github-cli:1": {
    // // 	"version": "latest"
    // // },
  }
}
